---
openapi: 3.0.0

info:
  title: API Gekko Project
  description: Documentaci贸n de API Rest desarrollada para proyecto Gekko. Versi贸n preliminar solo para fines informativos. Para soporte contacte a [Kuva.ai](https://kuva.ai)
  termsOfService: https://www.kuva.ai/terms-api-gekko
  contact:
    name: API Support
    email: help@kuva.ai
  license:
    name: Copyright Kuva.ai 2022. All rights reserved.
  version: '1.0.0'
  x-logo:
    url: './kuva_logo.png'
    backgroundColor: '#FFFFFF'
    altText: 'Kuva.ai logo'

servers:
- url: https://virtserver.swaggerhub.com/Kuva.ai/API-Gekko/1.0.0
  description: SwaggerHub API Auto Mocking

security:
- ApiAuthKey: []

tags:
- name: Auth
- name: User
- name: Video
- name: Predict
- name: Clip

paths:
  /login:
    post:
      tags:
      - Auth
      description: Autentifica a Administradores de la API.
      operationId: login
      parameters:
      - name: User
        in: query
        description: Nombre del usuario administrador.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: Password
        in: query
        description: Password del usuario administrador.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: password
      responses:
        "200":
          description: Usuario es reconocido como Admin y el token de acceso de ha enviado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        "400":
          description: Error 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
  /logout:
    post:
      tags:
      - Auth
      description: Verifica un usuario y obtiene sus detalles.
      operationId: logout
      parameters:
      - name: token
        in: header
        description: Token de Usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 59b6b244-fc40-46d2-84a1-3cadcad931d3
      responses:
        "200":
          description: User Usuario es reconocido y token enviado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Error 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
  /get-User:
    get:
      tags:
      - User
      description: verifies a user and gets his details
      operationId: Get User Details
      parameters:
      - name: token
        in: header
        description: user's token
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 484513554-541365914-46104621-58451657
      responses:
        "200":
          description: User is recognized and token is sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
        "400":
          description: Error 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
  /get-path-video:
    get:
      tags:
      - Video
      description: Recibe y Valida URL de video a analizar.
      operationId: Get Video URL
      parameters:
      - name: URL
        in: header
        description: URL de video a analizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "https://storage.cloud.google.com/bucketName/folderName/video_1_user123_clip.flv"
      responses:
        "200":
          description: URL Validada.
        "401":
          description: URL Invalida.
  /predict:
    post:
      tags:
      - Predict
      description: Analiza video de URL Ingresada
      operationId: Predict video
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predict'
        "400":
          description: URL no encontrada.
        "404":
          description: Video no encontrado.
  /cut_video:
    post:
      tags:
      - Clip
      description: Corta un breve previsualizaci贸n del video procesado
      operationId: Cut Video
      parameters:
      - name: URL Video
        in: query
        description: URL del video a cortar.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "https://storage.cloud.google.com/bucketName/folderName/video_1_user123.flv"
      - name: Start Time
        in: query
        description: Tiempo inicial del video a cortar en segundos
        required: true
        style: form
        explode: true
        schema:
          type: number
          example: 300
      - name: Duration
        in: query
        description: Duraci贸n del clip de video a extraer, en segundos.
        required: true
        style: form
        explode: true
        schema:
          type: number
          example: 300          
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
        "400":
          description: URL no encontrada.
        "404":
          description: Video no encontrado.

components:
  schemas:
    "400":
      type: object
      properties:
        error:
          type: string
          example: Bad-Request -- Invalid body in your request
      description: Schema for 400
    Predict:
      type: object
      properties:
        name_video:
          type: string
          example: video_1
        user_id:
          type: string
          example: "123"
        date:
          type: string
          example: 2022-03-25
        timeline_game:
          type: string
          example: 1:12;2:25;3:00;3:50;5:00
      description: Schema for Predict
    Clip:
          type: object
          properties:
            name_video:
              type: string
              example: video_1
            user_id:
              type: string
              example: "123"
            URL_Clip:
              type: string
              example: "https://storage.cloud.google.com/bucketName/folderName/video_1_user123_clip.flv"
          description: Schema for Predict
    Login:
      type: object
      properties:
        token:
          type: string
          example: 484513554-541365914-46104621-58451657
      description: Schema for login
    UserDetails:
      type: object
      properties:
        username:
          type: string
          example: the-electron-lover
        info:
          type: string
          example: technical lead at infiniti systems
        bday:
          type: string
          example: 09-11-1998
      description: Schema for User
    inline_response_200:
      type: object
      properties:
        success:
          type: string
          example: User Logged out successfully!
  securitySchemes:
    ApiAuthKey:
      type: apiKey
      name: X-Auth-Token
      in: header
